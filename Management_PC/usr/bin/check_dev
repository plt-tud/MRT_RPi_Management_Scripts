#!/bin/bash


function getAllDevices() {	#this function returns all currently available devices into global variable GETALLDEVICES_AR
	unset GETALLDEVICES_AR
	for DEVICE in `cat /proc/partitions | awk '/mmcblk[0-9]+$/ || /sd[a-z]+$/ {print $4}'`; do
		GETALLDEVICES_AR=("${GETALLDEVICES_AR[@]}" $DEVICE)
	done

}



function removeSystemDevicesFromCurrent(){			#   $CURRENTDEVICES_AR[] = $CURRENTDEVICES_AR[] - $SYSTEMDEVICES_AR[]
	INDEX=0
	for CURRENTDEVICE in ${CURRENTDEVICES_AR[*]}; do
		for SYSTEMDEVICE in ${SYSTEMDEVICES_AR[*]}; do
			if [[ $CURRENTDEVICE == $SYSTEMDEVICE ]]; then
				unset CURRENTDEVICES_AR[$INDEX]
			fi
		done
		((INDEX++))
	done	
}

function updateNewDevices(){					#checks for new devices and puts them into $NEWDEVICES_AR[]
	for CURRENTDEVICE in ${CURRENTDEVICES_AR[*]}; do
		ALREADYINOLDDEVICES=0
		for OLDDEVICE in ${OLDDEVICES_AR[*]}; do
			if [[ $OLDDEVICE == $CURRENTDEVICE ]]; then
				ALREADYINOLDDEVICES=1
			fi
		done
		if [[ $ALREADYINOLDDEVICES == 0 ]]; then
			echo "new device detected"
			NEWDEVICES_AR=("${NEWDEVICES_AR[@]}" "$CURRENTDEVICE")
		fi
	done
}

function installNewDevices(){					#starts the installation-process for each new device ( in Array $NEWDEVICES_AR[] )
	for NEWDEVICE in ${NEWDEVICES_AR[*]}; do
		echo "starting the installation-process on device: " $NEWDEVICE
/home/makerspace/Downloads/MRT_RPi_Management_Scripts/Management_PC/usr/bin/install_raspbian.sh "$IMGFILE" "/dev/$NEWDEVICE" "$UPDATE"
    #$(readlink -f $(find -path "*/install_raspbian.sh"))  "$IMGFILE" "/dev/$NEWDEVICE" "$UPDATE"
    echo "Sie k√∂nnen nun einen neuen USB-Stick einstecken..."
	done
}


#MAIN:

if [ $(ps -ax |grep "check_dev" | wc -l) -gt 3 ] ;  then
	echo "Exiting check_dev as already running!!!"
	exit 1
fi

echo "Handle this script with care! It can overwrite a partition, i.e. usb-sticks"


function usage() {
  echo "Usage: "
  echo "  check_dev <path_to_raspbian_image> <path_to_pltupdate>"
  echo ""
}

if [ ! `id -u` -eq 0 ]; then
  echo "You must be root to execute this script."
  exit 1
fi

if [ ! "$#" -eq 2 ]; then
  usage
  exit 1
fi

IMGFILE=$1;						#input parameters...
UPDATE=$2;

GETALLDEVICES_AR=""					#return variable from getAllDevices()

getAllDevices
SYSTEMDEVICES_AR=("${GETALLDEVICES_AR[@]}")		# $SYSTEMDEVICES_AR[] contains all available devices at system start!

CURRENTDEVICES_AR=""					#in each loop, all currently available devices are listed in this Array minus the $SYSTEMDEVICES_AR[]
NEWDEVICES_AR="" 					#in each loop is that the diff of $CURRENTDEVICES_AR[] and $OLDDEVICES_AR[]
OLDDEVICES_AR=""					#after each loop, this contains the current devices

echo "SystemDevices: " ${SYSTEMDEVICES_AR[@]}

while [ : ]; do
	
	getAllDevices
	CURRENTDEVICES_AR=("${GETALLDEVICES_AR[@]}")
	CURRENTDEVICES=`removeSystemDevicesFromCurrent`

	removeSystemDevicesFromCurrent
	updateNewDevices
	installNewDevices &				#background-process -> non-blocking!
	unset NEWDEVICES_AR
	
	unset OLDDEVICES_AR
	OLDDEVICES_AR=("${CURRENTDEVICES_AR[@]}")
	
	sleep 5


done
